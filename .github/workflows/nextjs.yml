# Nome do Workflow: Implanta um site Next.js no Deno Deploy
name: Deploy Next.js site to Deno Deploy

on:
  # Executa em pushes para a branch "main"
  push:
    branches: ["main"]
  # Permite que você execute este workflow manualmente na aba Actions
  workflow_dispatch:

# Define as permissões necessárias para o token do Deno Deploy
permissions:
  contents: read
  id-token: write # Essencial para a autenticação com o Deno Deploy

jobs:
  # Job único para compilar e fazer o deploy
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Configurar Deno
        # Usa a action oficial do Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x # 'v1.x' usa a última versão estável

      - name: Criar entrypoint para o Deno Deploy
        # O Deno Deploy precisa de um arquivo de entrada para iniciar o servidor Next.js.
        # Este passo cria o arquivo 'main.ts' necessário dinamicamente.
        run: |
          echo 'import "https://deno.land/std@0.224.0/dotenv/load.ts";' > main.ts
          echo 'import "npm:next-on-deno/server.ts";' >> main.ts

      - name: Deploy para o Deno Deploy
        # Utiliza a action oficial e atual 'deployctl'
        uses: denoland/deployctl@v1
        with:
          # O nome do seu projeto no Deno Deploy
          project: "jordan-lima.github.io"

          # O arquivo de entrada principal da sua aplicação
          entrypoint: "main.ts" # Aponta para o arquivo criado no passo anterior

          # O diretório raiz do seu projeto (geralmente não precisa mudar)
          root: "."

